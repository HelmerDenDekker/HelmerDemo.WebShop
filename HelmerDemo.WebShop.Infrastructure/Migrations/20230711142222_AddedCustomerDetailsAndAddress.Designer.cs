// <auto-generated />
using System;
using HelmerDemo.WebShop.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelmerDemo.WebShop.Infrastructure.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20230711142222_AddedCustomerDetailsAndAddress")]
    partial class AddedCustomerDetailsAndAddress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerDetailId")
                        .HasColumnType("int");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDetailId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomersDetails");
                });

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDetailId")
                        .IsUnique()
                        .HasFilter("[CustomerDetailId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.AddressEntity", b =>
                {
                    b.HasOne("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerDetailEntity", "CustomerDetails")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerDetailId");

                    b.Navigation("CustomerDetails");
                });

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerEntity", b =>
                {
                    b.HasOne("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerDetailEntity", "CustomerDetails")
                        .WithOne("Customer")
                        .HasForeignKey("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerEntity", "CustomerDetailId");

                    b.Navigation("CustomerDetails");
                });

            modelBuilder.Entity("HelmerDemo.WebShop.Infrastructure.CustomerModel.CustomerDetailEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
